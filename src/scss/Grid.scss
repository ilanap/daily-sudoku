@mixin border($place) {
  border-#{$place}: 2px solid;
}

@mixin printRow($from: 1, $to: 10){
  @for $i from $from to $to{
    &:nth-child(27n + #{$i}) {
      @include border("top")
    }
  }
}

.grid {
  @media not print {
    .print-wrapper {
      display: none;
    }
  }
  @media print {
    .checkgrid, .buttons, .helpers, .button {
      display: none;
    }

    .print-wrapper {
      display: grid;
      grid-template-columns: repeat(9, [col] $cellInnerSize  ) ;
      grid-template-rows: repeat(9, [row] $cellInnerSize  );
      grid-gap: 0px;
      .cell {

        border-radius: 0px;
        background-color: white;
        color: black;
        border-style: dashed;
        border-width: 1px;

        @include printRow(1,10);

        &:nth-child(3n + 1) {
          @include border("left")
        }
        &:nth-child(9n) {
          @include border("right")
        }
        &:nth-last-of-type(-n+9) {
          @include border("bottom")
        }
      }
    }

  }


  width: 9* ($cellInnerSize + $gridGap) ;

  .buttons {
    width: 9* ($cellInnerSize + $gridGap) ;
    display: flex;
    justify-content: center;
    .buttons-right {
      .button {
        background-color: lighten($blue, 25%) ;
      }
    }
  }

  .helpers {
    background-color: lighten($baseColor, 50%);
    border-radius: $borderRadius;
    padding: $gridGap*2;
  }
  .helper {
    line-height: 30px;
  }
  .label {
    width: 175px;
    display:inline-block;
    font-size: $fontBaseSize * .75;
  }
  select {
    &.strategy {
      background-color: lighten($strategyColor, 40%);
    }
  }
  .grids-wrapper {
    display: grid;
    grid-gap: $gridGap;
    grid-template-columns: repeat(2, [col] ($cellInnerSize + $gridGap)*10 ) ;
    grid-template-rows: ($cellInnerSize + $gridGap) *9 100px;
  }
  .wrapper {
    display: grid;
    grid-gap: $gridGap;
    grid-template-columns: repeat(9, [col] $cellInnerSize ) ;
    grid-template-rows: repeat(9, [row] $cellInnerSize  );
    background-color: $backgroundColorGrid;
    color: $textColor;
    .even {
      background-color: $baseColor;
    }
    .uneven {
      background-color: lighten( $baseColor, 10% );
    }
    &.reversed {
      .active {
        border: 2px solid lighten( $baseColor, 30% );
      }

      background-color: $textColor;
      color: $baseColor;
      .even {
        background-color: darken( $textColor, 20% );
      }
      .uneven {
        background-color: darken( $textColor, 10% );
      }
    }
  }


  .cell {
    border-radius: $borderRadius;
    font-size:$fontBaseSize * 1.5;

    .cellHelper-wrapper {
      display: grid;
      grid-template-columns: $cellInnerSize/2 $cellInnerSize/2 ;
      grid-template-rows: $cellInnerSize;

      .helper-input {
        margin: 5px;
        line-height: $cellInnerSize - 10;
        text-align: center;
        font-size: $cellInnerSize/2;
        &.left {
          background-color: lighten($blue, 40%);
          &.side-left {
            background-color: lighten($blue, 10%);
          }
          &.started-left {
            border: 1px solid $baseColor;
          }
        }
        &.right {
          &.side-right {
            background-color: lighten($alternativeColor, 10%);
          }
          &.started-right {
            border: 1px solid $baseColor;
          }
          background-color: lighten($alternativeColor, 35%);
        }
      }
    }

    &.cellValueClass {
      padding-top: $cellInnerSize*.23;
      padding-left: $cellInnerSize*.33;
    }
    &.optionalValues {
      padding-top: $borderRadius;
      padding-left: $borderRadius;
    }
    &.active {
      border: 2px solid $backgroundColorGrid;
    }
    &.given {
      color: darken(#ffffff, 20%);
    }
    &.strategy {
      background-color: $strategyColor;
    }

    &.foundValue {
      background-color: lighten($blue, 20%);
    }
    &.sweepValue {
      background-color:  lighten($alternativeColor, 20%);
      text: black;
    }

    &.error {
      background-color: crimson;
    }

    .cellOptionalValues-wrapper {
      display: grid;
      grid-gap: $gridGap * .5;
      margin-left: 0;
      grid-template-columns: repeat(3, [col] ($cellInnerSize - ($borderRadius*4))/3 ) ;
      grid-template-rows: repeat(3, [row] ($cellInnerSize - ($borderRadius*4))/3  );
      font-size: $fontBaseSize * .45;
    }
    .cellOptionalValues-cell {
      text-align: center;
      padding: $borderRadius/2;
      font-size:$fontBaseSize * .6;
      color:darken($textColor, 10%)
    }
  }
}

